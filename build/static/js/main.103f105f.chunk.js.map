{"version":3,"sources":["BooksAPI.js","Components/mainBar.js","Components/BookShelfChanger.js","Components/Bookshelf.js","Components/OpenSearchButton.js","Components/MainContainer.js","Components/SearchPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","MainBar","react_default","a","createElement","className","BookShelfChanger","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOnChangeBookshelf","e","_this$props","handleOnChangeBookShelf","bookId","shelfToMoveValue","currentTarget","value","console","log","setState","state","actualShelf","_this2","onChange","disabled","Component","Bookshelf","_ref","title","dataBooks","shelfToMove","Fragment","map","key","style","width","height","backgroundImage","imageLinks","thumbnail","Components_BookShelfChanger","authors","OpenSearchButton","react_router_dom","to","MainContainer","currentlyReading","wantToRead","read","mainBar","Components_Bookshelf","Components_OpenSearchButton","SearchPage","handleOnChange","asyncToGenerator","regenerator_default","mark","_callee2","allBooks","textSearch","wrap","_context2","prev","next","setTimeout","_callee","searchResult","searchResultModified","_context","undefined","sent","error","find","x","stop","_x","apply","arguments","items","Array","type","placeholder","_ref3","_callee3","_context3","abrupt","_x2","BooksApp","bookshelfs","none","componentDidMount","filter","bookToMove","push","_this$state","_this$state$bookshelf","react_router","exact","path","render","Components_MainContainer","assign","Components_SearchPage","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.103f105f.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from \"react\";\r\n\r\nconst MainBar = () => {\r\n  return (\r\n    <div className=\"list-books-title\">\r\n      <h1>MyReads-Tony Krikorian</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass BookShelfChanger extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shelfToMoveValue: props.actualShelf\r\n    };\r\n  }\r\n\r\n  handleOnChangeBookshelf = e => {\r\n    const { handleOnChangeBookShelf, bookId, book } = this.props;\r\n    const {\r\n      currentTarget: { value: shelfToMoveValue }\r\n    } = e;\r\n    console.log({ shelfToMoveValue });\r\n    this.setState({ shelfToMoveValue });\r\n    handleOnChangeBookShelf(shelfToMoveValue, bookId, book);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"book-shelf-changer\">\r\n        <select\r\n          value={this.state.shelfToMoveValue}\r\n          onChange={e => {\r\n            this.handleOnChangeBookshelf(e);\r\n          }}\r\n        >\r\n          <option disabled>Move to...</option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookShelfChanger;\r\n","import React from \"react\";\r\nimport BookShelfChanger from \"../Components/BookShelfChanger\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Bookshelf = ({\r\n  title,\r\n  dataBooks,\r\n  handleOnChangeBookShelf,\r\n  shelfToMove\r\n}) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{title}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {\"error\" in dataBooks ? (\r\n            <span>There's no results</span>\r\n          ) : (\r\n            <React.Fragment>\r\n              {dataBooks.map(book => (\r\n                <li key={book.id}>\r\n                  <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                      <div\r\n                        className=\"book-cover\"\r\n                        style={{\r\n                          width: 128,\r\n                          height: 193,\r\n                          backgroundImage: `url(${\r\n                            !book.imageLinks ? \"\" : book.imageLinks.thumbnail\r\n                          })`\r\n                        }}\r\n                      ></div>\r\n                      <BookShelfChanger\r\n                        handleOnChangeBookShelf={handleOnChangeBookShelf}\r\n                        bookId={book.id}\r\n                        book={book}\r\n                        shelfToMove={shelfToMove}\r\n                        actualShelf={book.shelf ? book.shelf : \"none\"}\r\n                      />\r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    <div className=\"book-authors\">{book.authors}</div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </React.Fragment>\r\n          )}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nBookshelf.propTypes = {\r\n  dataBooks: PropTypes.array.isRequired,\r\n  handleOnChangeBookShelf: PropTypes.func.isRequired,\r\n  shelfToMove: PropTypes.string\r\n};\r\nexport default Bookshelf;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst OpenSearchButton = () => {\r\n  return (\r\n    <div className=\"open-search\">\r\n      <Link to=\"/search\">\r\n        <button>Add a book</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenSearchButton;\r\n","import React, { Component } from \"react\";\r\nimport MainBar from \"../Components/mainBar\";\r\nimport Bookshelf from \"../Components/Bookshelf\";\r\nimport OpenSearchButton from \"../Components/OpenSearchButton\";\r\n\r\nclass MainContainer extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      currentlyReading,\r\n      wantToRead,\r\n      read,\r\n      handleOnChangeBookShelf,\r\n      shelfToMove\r\n    } = this.props;\r\n    return (\r\n      <div className=\"list-books\">\r\n        <MainBar />\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <Bookshelf\r\n              title={\"Currently Reading\"}\r\n              dataBooks={currentlyReading}\r\n              handleOnChangeBookShelf={handleOnChangeBookShelf}\r\n              shelfToMove={shelfToMove}\r\n            />\r\n            <Bookshelf\r\n              title={\"Want to Read\"}\r\n              dataBooks={wantToRead}\r\n              handleOnChangeBookShelf={handleOnChangeBookShelf}\r\n              shelfToMove={shelfToMove}\r\n            />\r\n            <Bookshelf\r\n              title={\"Read\"}\r\n              dataBooks={read}\r\n              handleOnChangeBookShelf={handleOnChangeBookShelf}\r\n              shelfToMove={shelfToMove}\r\n            />\r\n          </div>\r\n        </div>\r\n        <OpenSearchButton />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { search } from \"../BooksAPI\";\r\nimport Bookshelf from \"./Bookshelf\";\r\n\r\nclass SearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      textSearch: \"\",\r\n      searchResult: [],\r\n      allBooks: props.allBooks,\r\n      error: { error: \"empty query\", items: Array(0) }\r\n    };\r\n  }\r\n\r\n  handleOnChange = async e => {\r\n    const { allBooks } = this.state;\r\n    const {\r\n      currentTarget: { value: textSearch }\r\n    } = e;\r\n\r\n    this.setState({ textSearch });\r\n\r\n    setTimeout(async () => {\r\n      let searchResult = await search(this.state.textSearch);\r\n      searchResult =\r\n        searchResult === undefined ? this.state.error : searchResult;\r\n\r\n      if (!(\"error\" in searchResult)) {\r\n        const searchResultModified = searchResult.map(book => {\r\n          return allBooks.find(x => x.id === book.id) || book;\r\n        });\r\n        console.log({ searchResultModified });\r\n        this.setState({ searchResult: searchResultModified });\r\n      } else {\r\n        this.setState({ searchResult: this.state.error });\r\n      }\r\n    }, 100);\r\n  };\r\n  render() {\r\n    const { searchResult } = this.state;\r\n    const { handleOnChangeBookShelf } = this.props;\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\">\r\n            <button className=\"close-search\">Close</button>\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              onChange={async e => await this.handleOnChange(e)}\r\n              value={this.state.textSearch}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {this.state.textSearch === \"\" ? (\r\n              <span>Search a book</span>\r\n            ) : (\r\n              <Bookshelf\r\n                dataBooks={searchResult}\r\n                handleOnChangeBookShelf={handleOnChangeBookShelf}\r\n              />\r\n            )}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { getAll, update } from \"./BooksAPI\";\r\nimport MainContainer from \"./Components/MainContainer\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SearchPage from \"./Components/SearchPage\";\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    bookshelfs: {\r\n      currentlyReading: [],\r\n      wantToRead: [],\r\n      read: [],\r\n      none: []\r\n    },\r\n    allBooks: [],\r\n    shelfToMove: \"\"\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const bookshelfs = { ...this.state.bookshelfs };\r\n    const allBooks = await getAll();\r\n\r\n    console.log(allBooks);\r\n    bookshelfs[\"currentlyReading\"] = allBooks.filter(\r\n      x => x.shelf === \"currentlyReading\"\r\n    );\r\n    bookshelfs[\"wantToRead\"] = allBooks.filter(x => x.shelf === \"wantToRead\");\r\n    bookshelfs[\"read\"] = allBooks.filter(x => x.shelf === \"read\");\r\n\r\n    this.setState({ bookshelfs, allBooks });\r\n  };\r\n\r\n  handleOnChangeBookShelf = async (shelfToMove, bookId, bookToMove) => {\r\n    console.log({ bookToMove });\r\n    const bookshelfs = { ...this.state.bookshelfs };\r\n\r\n    /*\r\n     * Manage BookShelfChanger state value\r\n     */\r\n    this.setState({ shelfToMove });\r\n\r\n    /**\r\n     * Selected book to move and shelf to move\r\n     */\r\n    let shelf = \"\";\r\n    if (\"shelf\" in bookToMove) {\r\n      shelf = bookToMove.shelf;\r\n    } else {\r\n      shelf = \"none\";\r\n    }\r\n\r\n    //Change the shelfe of the book to move and set the new value\r\n    bookToMove.shelf = shelfToMove;\r\n\r\n    bookshelfs[shelf][bookToMove] = bookToMove;\r\n\r\n    console.log({ bookToMove, shelf, shelfToMove });\r\n\r\n    bookshelfs[shelfToMove].push(bookToMove);\r\n\r\n    bookshelfs[shelf] = bookshelfs[shelf].filter(x => x.shelf === shelf);\r\n    this.setState({ bookshelfs });\r\n\r\n    await update(bookToMove, shelfToMove);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      bookshelfs: { currentlyReading, wantToRead, read, none },\r\n      shelfToMove,\r\n      allBooks\r\n    } = this.state;\r\n\r\n    const data = { currentlyReading, wantToRead, read, shelfToMove, none };\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => (\r\n              <MainContainer\r\n                {...data}\r\n                handleOnChangeBookShelf={this.handleOnChangeBookShelf}\r\n              />\r\n            )}\r\n          ></Route>\r\n          <Route\r\n            path=\"/search\"\r\n            render={() => (\r\n              <SearchPage\r\n                allBooks={allBooks}\r\n                handleOnChangeBookShelf={this.handleOnChangeBookShelf}\r\n              />\r\n            )}\r\n          ></Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}